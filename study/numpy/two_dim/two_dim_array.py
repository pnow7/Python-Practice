import numpy as np

L = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]

# 2차원 행렬 변환
np_array = np.array(L)    

print(L[0][2], np_array[0][2])
print(np_array)

# array 전체가 int형이라서 float형 넣어도 int형으로 됨
np_array[0,0] = 999
np_array[2, 2] = 1.234
print(np_array)

#########################################################################

print('*' * 30, "넘파이 스타일의 2차원 배열 슬라이싱", '*' * 30)

my_array = np.array([[1, 2, 3, 4], [5, 6, 7, 8], [9, 10, 11, 12], [13, 14, 15, 16]])
print(my_array)

# 슬라이싱(0번째 부터 첫번째 행, 2번째 열부터 3번째 열)
print(my_array[:2, 2:4])

# 0번째부터 2번째 행, 첫번째 열부터 두번째 열
print(my_array[:3, 1:3])

# 모든 행, 2번째 열
print(my_array[:, 2])

# [:3] 인덱싱 후 결과를 다시 [1:3] 인덱싱을 수행
# 0번째 부터 2번째 행까지 인덱싱 후, 첫번째 행부터 두번째 행 인덱싱
print(my_array[:3][1:3])

# 0번부터 끝까지 각 행, 열 2칸씩
print(my_array[::2, ::2])



